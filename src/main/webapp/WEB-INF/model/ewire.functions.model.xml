<?xml version="1.0" encoding="utf-8" ?>

<model xmlns="http://www.top-logic.com/ns/dynamic-types/6.0">
	<module name="ewire.functions">
		<enum name="FunctionType">
			<classifier name="POWER">
				<annotations>
					<instance-presentation icon="css:fa-solid fa-plug"/>
				</annotations>
			</classifier>
			<classifier name="SWITCH">
				<annotations>
					<instance-presentation icon="css:fa-solid fa-lightbulb"/>
				</annotations>
			</classifier>
			<classifier name="BLIND">
				<annotations>
					<instance-presentation icon="css:fa-solid fa-arrows-up-down"/>
				</annotations>
			</classifier>
			<classifier name="BLIND_UP">
				<annotations>
					<instance-presentation icon="css:fa-solid fa-chevron-up"/>
				</annotations>
			</classifier>
			<classifier name="BLIND_DOWN">
				<annotations>
					<instance-presentation icon="css:fa-solid fa-angle-down"/>
				</annotations>
			</classifier>
			<classifier name="KNX_PLUS">
				<annotations>
					<instance-presentation icon="css:bi bi-plus-circle"/>
				</annotations>
			</classifier>
			<classifier name="KNX_MINUS">
				<annotations>
					<instance-presentation icon="css:fa-solid fa-circle-minus"/>
				</annotations>
			</classifier>
			<classifier name="NETWORK">
				<annotations>
					<instance-presentation icon="css:bi bi-usb-plug"/>
				</annotations>
			</classifier>
			<classifier name="SAT">
				<annotations>
					<instance-presentation icon="css:fa-solid fa-satellite-dish"/>
				</annotations>
			</classifier>
			<classifier name="SENSOR">
				<annotations>
					<instance-presentation icon="css:fa-solid fa-house-signal"/>
				</annotations>
			</classifier>
			<classifier name="OTHER">
				<annotations>
					<instance-presentation icon="css:fa-regular fa-circle-question"/>
				</annotations>
			</classifier>
		</enum>
		<class name="Function">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<annotations>
				<id-column value="label"/>
				<form-definition>
					<form>
						<field
							attribute="name"
							fullQualifiedName="ewire.functions:Function#name"
							type="tl.core:String"
						/>
						<field
							attribute="description"
							fullQualifiedName="ewire.functions:Function#description"
							type="tl.core:String"
						/>
						<field
							attribute="location"
							fullQualifiedName="ewire.functions:Function#location"
							type="ewire.core:Location"
						/>
						<field
							attribute="source"
							fullQualifiedName="ewire.functions:Function#source"
							type="ewire.core:Socket"
						/>
						<field
							attribute="destination"
							fullQualifiedName="ewire.functions:Function#destination"
							type="ewire.core:Socket"
						>
							<annotations>
								<render-whole-line/>
								<reference-display value="table"/>
								<label-position value="hide-label"/>
								<main-properties properties="label,description"/>
							</annotations>
						</field>
						<field
							attribute="parts"
							fullQualifiedName="ewire.functions:Function#parts"
							type="ewire.functions:SubFunction"
						>
							<annotations>
								<label-position value="hide-label"/>
								<main-properties properties="suffix,description"/>
							</annotations>
						</field>
					</form>
				</form-definition>
			</annotations>
			<attributes>
				<property name="name"
					mandatory="true"
					type="tl.core:String"
				/>
				<reference name="location"
					kind="forwards"
					navigate="true"
					type="ewire.core:Location"
				/>
				<property name="label"
					type="tl.core:String"
				>
					<annotations>
						<visibility value="hidden"/>
						<storage-algorithm>
							<query>
								<expr><![CDATA[fun -> "{0} ({1})".fill(
    $fun.get(`ewire.functions:Function#name`),
    $fun.get(`ewire.functions:Function#location`).label()
)]]></expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
				<reference name="source"
					kind="forwards"
					navigate="true"
					type="ewire.core:Socket"
				>
					<annotations>
						<options>
							<treeoptions-by-expression
								children="p -> $p.get(`ewire.core:WithLocations#locations`)"
								parents="p -> $p.referers(`ewire.core:WithLocations#locations`)"
								rootNode="f -> $f.container()"
								selection-filter="p -> $p.instanceOf(`ewire.core:Socket`)"
							/>
						</options>
					</annotations>
				</reference>
				<reference name="destination"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="ewire.core:Socket"
				>
					<annotations>
						<options>
							<treeoptions-by-expression
								children="p -> $p.get(`ewire.core:WithLocations#locations`)"
								finite="true"
								parents="p -> $p.referers(`ewire.core:WithLocations#locations`)"
								rootNode="f -> $f.container()"
								selection-filter="p -> $p.instanceOf(`ewire.core:Socket`)"
								showRoot="false"
							/>
						</options>
					</annotations>
				</reference>
				<property name="description"
					type="tl.core:String"
				/>
				<reference name="parts"
					composite="true"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="SubFunction"
				/>
				<property name="project"
					type="ewire.core:Project"
				>
					<annotations>
						<visibility value="hidden"/>
						<storage-algorithm>
							<query>
								<expr><![CDATA[fun -> $fun.recursion(x -> $x.container())
    .filter(x -> $x.instanceOf(`ewire.core:Project`))
    .firstElement()]]></expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
				<reference name="type"
					kind="forwards"
					mandatory="true"
					navigate="true"
					type="FunctionType"
				/>
			</attributes>
		</class>
		<class name="SubFunction">
			<generalizations>
				<generalization type="Function"/>
			</generalizations>
			<attributes>
				<property name="suffix"
					mandatory="true"
					type="tl.core:String"
				/>
				<reference name="destination"
					override="true"
					type="ewire.core:Socket"
				>
					<annotations>
						<storage-algorithm>
							<query expr="x -> $x.container().get(`ewire.functions:Function#destination`)"/>
						</storage-algorithm>
					</annotations>
				</reference>
				<reference name="source"
					override="true"
					type="ewire.core:Socket"
				>
					<annotations>
						<storage-algorithm>
							<query expr="x -> $x.container().get(`ewire.functions:Function#source`)"/>
						</storage-algorithm>
					</annotations>
				</reference>
				<reference name="location"
					override="true"
					type="ewire.core:Location"
				>
					<annotations>
						<storage-algorithm>
							<query expr="x -> $x.container().get(`ewire.functions:Function#location`)"/>
						</storage-algorithm>
					</annotations>
				</reference>
				<property name="name"
					override="true"
					type="tl.core:String"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[x -> "{0} ({1})".fill(
    $x.container().get(`ewire.functions:Function#name`),
    $x.get(`ewire.functions:SubFunction#suffix`))]]></expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
			</attributes>
		</class>
	</module>
</model>